#!/bin/bash -e

# Enable jemalloc for reduced memory usage and latency.
if [ -z "${LD_PRELOAD+x}" ]; then
    LD_PRELOAD=$(find /usr/lib -name libjemalloc.so.2 -print -quit)
    export LD_PRELOAD
fi

# Check if we should run both web and worker processes
if [ "$1" == "web+worker" ]; then
  echo "Starting both web server and worker processes..."
  
  # Prepare databases
  echo "Preparing main database..."
  ./bin/rails db:prepare
  
  # Prepare SolidQueue database if it's separate
  if [ -f "./db/queue_migrate" ] || [ -d "./db/queue_migrate" ]; then
    echo "Preparing SolidQueue database..."
    RAILS_ENV=${RAILS_ENV:-production} ./bin/rails solid_queue:db:prepare
  fi
  
  # Check if Foreman is installed
  if ! command -v foreman &> /dev/null; then
    echo "Installing foreman..."
    gem install foreman
  fi

  # Create a temporary Procfile for production
  cat > Procfile.prod << EOL
web: ./bin/thrust ./bin/rails server
worker: ./bin/rails solid_queue:start
EOL

  # Start both processes using foreman
  exec foreman start -f Procfile.prod

# If running just the rails server, prepare database
elif [ "${@: -2:1}" == "./bin/rails" ] && [ "${@: -1:1}" == "server" ]; then
  echo "Preparing main database..."
  ./bin/rails db:prepare
  
  # Prepare SolidQueue database if it's separate
  if [ -f "./db/queue_migrate" ] || [ -d "./db/queue_migrate" ]; then
    echo "Preparing SolidQueue database..."
    RAILS_ENV=${RAILS_ENV:-production} ./bin/rails solid_queue:db:prepare
  fi
  
  exec "${@}"
else
  # For any other command, just execute it
  exec "${@}"
fi
